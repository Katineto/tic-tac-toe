{"version":3,"sources":["game.js","view.js","script.js"],"names":["patterns","createBoard","cells","slice","mark1","position","console","log","mark2","isEmptyCell","playerBuilder","lastId","name","id","createPlayer","createGame","p1","p2","board","winnerId","currentPlayer","switchPlayer","checkWin","currentBoard","hasWinningPattern","playerMarks","i","length","push","forEach","pattern","every","indexOf","cell","getBoard","getWinnerId","turn","module","exports","renderBoard","game","boardDiv","document","getElementById","lastChild","removeChild","createElement","setAttribute","innerText","appendChild","addEventListener","tictactoe","require","view","player1Input","player2Input","createGameBtn","player1","player2","startNewGame","value"],"mappings":"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","file":"script.853a618c.map","sourceRoot":"..","sourcesContent":["\r\nconst patterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8],   // horizontal\r\n[0, 3, 6], [1, 4, 7], [2, 5, 8],   // vertical\r\n[0, 4, 8], [2, 4, 6]]              // diagonal\r\nconst createBoard = () => {\r\n    let cells = [0,0,0,0,0,0,0,0,0]\r\n    return {\r\n        cells: () => cells.slice(0),\r\n        mark1: (position) => {\r\n            cells[position] = 1\r\n            console.log(cells)\r\n        },\r\n        mark2: (position) => {\r\n            cells[position] = 2\r\n            console.log(cells)\r\n        },\r\n        isEmptyCell: (position) => {\r\n            return cells[position] == 0 ? true : false\r\n        }\r\n    }    \r\n}\r\n\r\nconst playerBuilder = () => {\r\n    let lastId = 0\r\n    return (name) => {\r\n        lastId += 1\r\n        return {\r\n            name,\r\n            id: lastId\r\n        }\r\n    }\r\n}\r\nconst createPlayer = playerBuilder()\r\n\r\nconst createGame = (p1, p2) => {\r\n    const board = createBoard()\r\n    let winnerId = 0\r\n    let currentPlayer = p1\r\n    const switchPlayer = () => {\r\n        if(currentPlayer == p1) currentPlayer = p2\r\n        else currentPlayer = p1\r\n    }\r\n    const checkWin = () => {\r\n        const currentBoard = board.cells()\r\n        let hasWinningPattern = false\r\n        let playerMarks = []\r\n        for(let i = 0; i < currentBoard.length; i++) {\r\n            if(currentBoard[i] == currentPlayer.id) {\r\n                playerMarks.push(i)\r\n            } \r\n        }\r\n        console.log(`player marks: ${playerMarks}`)\r\n        if(playerMarks.length >= 3) {\r\n            patterns.forEach(pattern => {\r\n                if(pattern.every(cell => playerMarks.indexOf(cell)) != -1) {\r\n                    hasWinningPattern = true\r\n                }\r\n            })\r\n        }\r\n        return hasWinningPattern\r\n    }\r\n    return {\r\n        getBoard: () => board.cells(),\r\n        getWinnerId: () => winnerId,\r\n        turn: (position) => {\r\n            if(board.isEmptyCell(position)) {\r\n                if(currentPlayer == p1) {\r\n                    board.mark1(position)\r\n                }\r\n                else {\r\n                    board.mark2(position)\r\n                }\r\n            }\r\n            else console.log('This cell is taken.') \r\n\r\n            if (checkWin()) {\r\n                if (currentPlayer == p1) {\r\n                    winnerId = 1\r\n                } else {\r\n                    winnerId = 2\r\n                }\r\n                console.log('We have a winner')\r\n                return true\r\n            } else {\r\n                switchPlayer()\r\n                return false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    createBoard,\r\n    createGame,\r\n    createPlayer\r\n}","const renderBoard = (game) => {\r\n    const boardDiv = document.getElementById('board')\r\n    while (boardDiv.lastChild) {\r\n        boardDiv.removeChild(boardDiv.lastChild)\r\n    }\r\n    const cells = game.getBoard()\r\n    for (let i = 0; i < cells.length; i++) {\r\n        const cell = document.createElement('div')\r\n        cell.setAttribute('id', `${i}`)\r\n        //inner text doesn't show\r\n        if(cells[i] == 0) cell.innerText = ''\r\n        else if(cells[i] == 1) cell.innerText = 'X'\r\n        else cell.innerText = 'O'\r\n        boardDiv.appendChild(cell)\r\n        cell.addEventListener('click', () => game.turn(i))\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    renderBoard\r\n}","const tictactoe = require('./game')\r\nconst view = require('./view')\r\n\r\nconst player1Input = document.getElementById('player1')\r\nconst player2Input = document.getElementById('player2')\r\nconst createGameBtn = document.getElementById('create-game-btn')\r\n\r\nlet player1\r\nlet player2\r\n\r\n\r\nfunction startNewGame() {\r\n    player1 = tictactoe.createPlayer(player1Input.value || 'First player')\r\n    player2 = tictactoe.createPlayer(player1Input.value || 'Second player')\r\n    const game = tictactoe.createGame(player1, player2)\r\n    view.renderBoard(game)\r\n}\r\ncreateGameBtn.addEventListener('click', startNewGame)\r\n"]}